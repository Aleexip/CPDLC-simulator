{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\proiecte_programare\\\\CPDLC_simulator\\\\cpdlc-frontend\\\\src\\\\components\\\\Weather\\\\WeatherControls.js\";\nimport React from 'react';\n\n// WeatherControls component for CPDLC aviation simulator\n// Should render toggle buttons for: clouds, wind, pressure weather layers\n// Props: weatherState object with boolean values, onWeatherToggle callback function\n// Use modern React functional component with hooks\n// Style buttons with conditional active state (blue when active, dark when inactive)\n// Should be responsive and accessible\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherTypes = [{\n  key: 'clouds',\n  label: 'Clouds'\n}, {\n  key: 'wind',\n  label: 'Wind'\n}, {\n  key: 'pressure',\n  label: 'Pressure'\n}];\nconst WeatherControls = ({\n  weatherState,\n  onWeatherToggle\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"weather-controls-panel\",\n  style: {\n    position: 'absolute',\n    top: 16,\n    left: 16,\n    zIndex: 1000,\n    background: '#222',\n    padding: '12px 16px',\n    borderRadius: '8px',\n    display: 'flex',\n    gap: '12px',\n    boxShadow: '0 2px 8px rgba(0,0,0,0.2)'\n  },\n  role: \"group\",\n  \"aria-label\": \"Weather Layer Controls\",\n  children: weatherTypes.map(({\n    key,\n    label\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    \"aria-pressed\": weatherState[key],\n    onClick: () => onWeatherToggle(key),\n    className: `weather-toggle-btn${weatherState[key] ? ' active' : ''}`,\n    style: {\n      background: weatherState[key] ? '#1976d2' : '#333',\n      color: '#fff',\n      border: 'none',\n      borderRadius: '4px',\n      padding: '8px 16px',\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      outline: 'none',\n      transition: 'background 0.2s'\n    },\n    children: label\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 5\n}, this);\n_c = WeatherControls;\nexport default WeatherControls;\nvar _c;\n$RefreshReg$(_c, \"WeatherControls\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","weatherTypes","key","label","WeatherControls","weatherState","onWeatherToggle","className","style","position","top","left","zIndex","background","padding","borderRadius","display","gap","boxShadow","role","children","map","type","onClick","color","border","cursor","fontWeight","outline","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/downloads/proiecte_programare/CPDLC_simulator/cpdlc-frontend/src/components/Weather/WeatherControls.js"],"sourcesContent":["import React from 'react';\r\n\r\n// WeatherControls component for CPDLC aviation simulator\r\n// Should render toggle buttons for: clouds, wind, pressure weather layers\r\n// Props: weatherState object with boolean values, onWeatherToggle callback function\r\n// Use modern React functional component with hooks\r\n// Style buttons with conditional active state (blue when active, dark when inactive)\r\n// Should be responsive and accessible\r\n\r\nconst weatherTypes = [\r\n    { key: 'clouds', label: 'Clouds' },\r\n    { key: 'wind', label: 'Wind' },\r\n    { key: 'pressure', label: 'Pressure' },\r\n];\r\n\r\nconst WeatherControls = ({ weatherState, onWeatherToggle }) => (\r\n    <div\r\n        className=\"weather-controls-panel\"\r\n        style={{\r\n            position: 'absolute',\r\n            top: 16,\r\n            left: 16,\r\n            zIndex: 1000,\r\n            background: '#222',\r\n            padding: '12px 16px',\r\n            borderRadius: '8px',\r\n            display: 'flex',\r\n            gap: '12px',\r\n            boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\r\n        }}\r\n        role=\"group\"\r\n        aria-label=\"Weather Layer Controls\"\r\n    >\r\n        {weatherTypes.map(({ key, label }) => (\r\n            <button\r\n                key={key}\r\n                type=\"button\"\r\n                aria-pressed={weatherState[key]}\r\n                onClick={() => onWeatherToggle(key)}\r\n                className={`weather-toggle-btn${weatherState[key] ? ' active' : ''}`}\r\n                style={{\r\n                    background: weatherState[key] ? '#1976d2' : '#333',\r\n                    color: '#fff',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    padding: '8px 16px',\r\n                    cursor: 'pointer',\r\n                    fontWeight: 'bold',\r\n                    outline: 'none',\r\n                    transition: 'background 0.2s',\r\n                }}\r\n            >\r\n                {label}\r\n            </button>\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default WeatherControls;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAG,CACjB;EAAEC,GAAG,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EAClC;EAAED,GAAG,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,EAC9B;EAAED,GAAG,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,CACzC;AAED,MAAMC,eAAe,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,kBACtDN,OAAA;EACIO,SAAS,EAAC,wBAAwB;EAClCC,KAAK,EAAE;IACHC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE,MAAM;IAClBC,OAAO,EAAE,WAAW;IACpBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,MAAM;IACfC,GAAG,EAAE,MAAM;IACXC,SAAS,EAAE;EACf,CAAE;EACFC,IAAI,EAAC,OAAO;EACZ,cAAW,wBAAwB;EAAAC,QAAA,EAElCnB,YAAY,CAACoB,GAAG,CAAC,CAAC;IAAEnB,GAAG;IAAEC;EAAM,CAAC,kBAC7BH,OAAA;IAEIsB,IAAI,EAAC,QAAQ;IACb,gBAAcjB,YAAY,CAACH,GAAG,CAAE;IAChCqB,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACJ,GAAG,CAAE;IACpCK,SAAS,EAAE,qBAAqBF,YAAY,CAACH,GAAG,CAAC,GAAG,SAAS,GAAG,EAAE,EAAG;IACrEM,KAAK,EAAE;MACHK,UAAU,EAAER,YAAY,CAACH,GAAG,CAAC,GAAG,SAAS,GAAG,MAAM;MAClDsB,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdV,YAAY,EAAE,KAAK;MACnBD,OAAO,EAAE,UAAU;MACnBY,MAAM,EAAE,SAAS;MACjBC,UAAU,EAAE,MAAM;MAClBC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE;IAChB,CAAE;IAAAT,QAAA,EAEDjB;EAAK,GAjBDD,GAAG;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAkBJ,CACX;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACR;AAACC,EAAA,GAzCI9B,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}