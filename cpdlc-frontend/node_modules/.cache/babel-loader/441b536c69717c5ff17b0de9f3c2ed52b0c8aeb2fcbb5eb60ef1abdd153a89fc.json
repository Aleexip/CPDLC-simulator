{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\proiecte_programare\\\\CPDLC_simulator\\\\cpdlc-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\"; // Import React and necessary hooks for state management\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\"; // Import necessary components from react-leaflet for map rendering\nimport \"leaflet/dist/leaflet.css\"; // Import Leaflet CSS for proper map styling\nimport { Marker, Popup, Polyline } from \"react-leaflet\"; // Import Marker and Popup for plane markers\nimport L from \"leaflet\"; // Import Leaflet for map functionalities\nimport \"leaflet-rotatedmarker\"; // Import rotated marker plugin for heading support\n\nimport WeatherLayer from \"./components/Weather/WeatherLayer\"; // Import the WeatherLayer component for weather overlays\nimport WeatherControls from \"./components/Weather/WeatherControls\"; // Import the WeatherControls component for weather toggles\nimport PlaneMarker from \"./components/Aircraft/AircraftMarker\"; // Import the PlaneMarker component for individual plane markers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for each weather overlay\n  const [showClouds, setShowClouds] = useState(false);\n  const [showWind, setShowWind] = useState(false);\n  const [showPressure, setShowPressure] = useState(false);\n  const [selectedCallsign, setSelectedCallsign] = useState(null);\n\n  // Sample plane data\n  const [planes, setPlanes] = useState([{\n    icao: \"LZIB\",\n    flight_level: 350,\n    lat: 44.57,\n    lng: 27.48,\n    heading: 90,\n    speed: 450,\n    callsign: \"BUL123\",\n    trail: [[44.57, 27.48]]\n  }, {\n    icao: \"A320\",\n    flight_level: 320,\n    lat: 44.87,\n    lng: 26.48,\n    heading: 270,\n    speed: 430,\n    callsign: \"BUL456\",\n    trail: [[44.87, 26.48]]\n  }, {\n    icao: \"B737\",\n    flight_level: 300,\n    lat: 44.57,\n    lng: 25.48,\n    heading: 180,\n    speed: 400,\n    callsign: \"BUL789\",\n    trail: [[44.57, 25.48]]\n  }, {\n    icao: \"C172\",\n    flight_level: 100,\n    lat: 45.57,\n    lng: 24.48,\n    heading: 0,\n    speed: 120,\n    callsign: \"BUL101\",\n    trail: [[45.57, 24.48]]\n  }, {\n    icao: \"E190\",\n    flight_level: 280,\n    lat: 45.57,\n    lng: 23.48,\n    heading: 45,\n    speed: 500,\n    callsign: \"BUL202\",\n    trail: [[45.57, 23.48]]\n  }]);\n\n  // Define a custom icon for the planes\n  const planeIcon = new L.Icon({\n    iconUrl: \"https://icones.pro/wp-content/uploads/2021/08/symbole-d-avion-et-de-voyage-jaune.png\",\n    iconSize: [32, 32],\n    iconAnchor: [16, 16]\n  });\n  useEffect(() => {\n    // Simulate fetching plane data every 1 seconds\n    const interval = setInterval(() => {\n      // Here would fetch real data from an API\n\n      setPlanes(prevPlanes => prevPlanes.map(plane => {\n        // Calculate movement\n        const speedKms = plane.speed * 1.852 / 3600; // knots to km/s\n        const headingRad = plane.heading * Math.PI / 180;\n        const earthRadius = 6371; // km\n        const deltaLat = speedKms * Math.cos(headingRad) / earthRadius;\n        const deltaLon = speedKms * Math.sin(headingRad) / (earthRadius * Math.cos(plane.lat * Math.PI / 180));\n        return {\n          ...plane,\n          lat: plane.lat + deltaLat * 180 / Math.PI,\n          lng: plane.lng + deltaLon * 180 / Math.PI,\n          trail: [...plane.trail, [plane.lat, plane.lng]].slice(-350) // Keep last 350 positions\n        };\n      }));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(WeatherControls, {\n      showClouds: showClouds,\n      setShowClouds: setShowClouds,\n      showWind: showWind,\n      setShowWind: setShowWind,\n      showPressure: showPressure,\n      setShowPressure: setShowPressure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46, 25],\n      zoom: 7.5,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors \\xA9 <a href=\\\"https://carto.com/attributions\\\">CARTO</a>\",\n        subdomains: \"abcd\",\n        maxZoom: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherLayer, {\n        type: \"clouds\",\n        visible: showClouds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherLayer, {\n        type: \"wind\",\n        visible: showWind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherLayer, {\n        type: \"pressure\",\n        visible: showPressure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), planes.map(plane => plane.callsign === selectedCallsign ? /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: plane.trail,\n        color: \"yellow\",\n        weight: 5\n      }, plane.callsign + \"-trail\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this) : null), planes.map((plane, idx) => /*#__PURE__*/_jsxDEV(PlaneMarker, {\n        plane: plane,\n        planeIcon: planeIcon,\n        selectedCallsign: selectedCallsign,\n        setSelectedCallsign: setSelectedCallsign\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3vJ6g1zeQRgB6WQgq4o6WB5M4bU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","useMap","Marker","Popup","Polyline","L","WeatherLayer","WeatherControls","PlaneMarker","jsxDEV","_jsxDEV","App","_s","showClouds","setShowClouds","showWind","setShowWind","showPressure","setShowPressure","selectedCallsign","setSelectedCallsign","planes","setPlanes","icao","flight_level","lat","lng","heading","speed","callsign","trail","planeIcon","Icon","iconUrl","iconSize","iconAnchor","interval","setInterval","prevPlanes","map","plane","speedKms","headingRad","Math","PI","earthRadius","deltaLat","cos","deltaLon","sin","slice","clearInterval","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","attribution","subdomains","maxZoom","type","visible","positions","color","weight","idx","_c","$RefreshReg$"],"sources":["D:/downloads/proiecte_programare/CPDLC_simulator/cpdlc-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"; // Import React and necessary hooks for state management\r\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\"; // Import necessary components from react-leaflet for map rendering\r\nimport \"leaflet/dist/leaflet.css\"; // Import Leaflet CSS for proper map styling\r\nimport { Marker, Popup, Polyline } from \"react-leaflet\"; // Import Marker and Popup for plane markers\r\nimport L from \"leaflet\"; // Import Leaflet for map functionalities\r\nimport \"leaflet-rotatedmarker\"; // Import rotated marker plugin for heading support\r\n\r\nimport  WeatherLayer  from \"./components/Weather/WeatherLayer\"; // Import the WeatherLayer component for weather overlays\r\nimport  WeatherControls from \"./components/Weather/WeatherControls\"; // Import the WeatherControls component for weather toggles\r\nimport  PlaneMarker from \"./components/Aircraft/AircraftMarker\"; // Import the PlaneMarker component for individual plane markers\r\n\r\nfunction App() {\r\n\r\n  // State for each weather overlay\r\n  const [showClouds, setShowClouds] = useState(false);\r\n  const [showWind, setShowWind] = useState(false);\r\n  const [showPressure, setShowPressure] = useState(false);\r\n  const [selectedCallsign, setSelectedCallsign] = useState(null);\r\n\r\n  // Sample plane data\r\n  const [planes, setPlanes] = useState([\r\n    { icao: \"LZIB\", flight_level: 350, lat: 44.57, lng: 27.48, heading: 90, speed: 450, callsign: \"BUL123\",trail: [[44.57,27.48]] },\r\n    {icao: \"A320\", flight_level: 320, lat: 44.87, lng: 26.48, heading: 270, speed: 430, callsign: \"BUL456\", trail: [[44.87,26.48]] },\r\n    {icao: \"B737\", flight_level: 300, lat: 44.57, lng: 25.48, heading: 180, speed: 400, callsign: \"BUL789\",trail: [[44.57,25.48]] },\r\n    {icao: \"C172\", flight_level: 100, lat: 45.57, lng: 24.48, heading: 0, speed: 120, callsign: \"BUL101\", trail: [[45.57,24.48]]},\r\n    {icao: \"E190\", flight_level: 280, lat: 45.57, lng: 23.48, heading: 45, speed: 500, callsign: \"BUL202\", trail: [[45.57,23.48]]},\r\n\r\n  ]);\r\n\r\n  // Define a custom icon for the planes\r\n  const planeIcon = new L.Icon({\r\n    iconUrl: \"https://icones.pro/wp-content/uploads/2021/08/symbole-d-avion-et-de-voyage-jaune.png\", \r\n    iconSize: [32, 32], \r\n    iconAnchor: [16, 16], \r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching plane data every 1 seconds\r\n    const interval = setInterval(() => {\r\n      // Here would fetch real data from an API\r\n\r\n      setPlanes(prevPlanes =>\r\n  prevPlanes.map(plane => {\r\n    // Calculate movement\r\n    const speedKms = plane.speed * 1.852 / 3600; // knots to km/s\r\n    const headingRad = (plane.heading * Math.PI) / 180;\r\n    const earthRadius = 6371; // km\r\n    const deltaLat = (speedKms * Math.cos(headingRad)) / earthRadius;\r\n    const deltaLon = (speedKms * Math.sin(headingRad)) / (earthRadius * Math.cos(plane.lat * Math.PI / 180));\r\n    return {\r\n      ...plane,\r\n      lat: plane.lat + (deltaLat * 180) / Math.PI,\r\n      lng: plane.lng + (deltaLon * 180) / Math.PI,\r\n      trail: [...plane.trail, [plane.lat, plane.lng]].slice(-350) // Keep last 350 positions\r\n\r\n     \r\n    };\r\n  })\r\n);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\r\n      <WeatherControls\r\n        showClouds={showClouds}\r\n        setShowClouds={setShowClouds}\r\n        showWind={showWind}\r\n        setShowWind={setShowWind}\r\n        showPressure={showPressure}\r\n        setShowPressure={setShowPressure}\r\n      />\r\n      {/* Map with CartoDB Dark Matter as base */}\r\n      <MapContainer center={[46, 25]} zoom={7.5} style={{ height: \"100%\", width: \"100%\" }}>\r\n        <TileLayer\r\n          url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\r\n          subdomains=\"abcd\"\r\n          maxZoom={20}\r\n        />\r\n        {/* Weather overlays */}\r\n        <WeatherLayer type=\"clouds\" visible={showClouds} />\r\n        <WeatherLayer type=\"wind\" visible={showWind} />\r\n        <WeatherLayer type=\"pressure\" visible={showPressure} />\r\n\r\n\r\n        {/* Plane trails */}\r\n        {planes.map((plane) =>\r\n  plane.callsign === selectedCallsign ? (\r\n    <Polyline\r\n      key={plane.callsign + \"-trail\"}\r\n      positions={plane.trail}\r\n      color=\"yellow\"\r\n      weight={5}\r\n    />\r\n  ) : null\r\n)}\r\n\r\n\r\n        {/* Plane markers */} \r\n        {planes.map((plane, idx) => (\r\n          <PlaneMarker\r\n            key={idx}\r\n            plane={plane}\r\n            planeIcon={planeIcon}\r\n            selectedCallsign={selectedCallsign}\r\n            setSelectedCallsign={setSelectedCallsign}\r\n          />  \r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAC5D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe,CAAC,CAAC;AACjE,OAAO,0BAA0B,CAAC,CAAC;AACnC,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe,CAAC,CAAC;AACzD,OAAOC,CAAC,MAAM,SAAS,CAAC,CAAC;AACzB,OAAO,uBAAuB,CAAC,CAAC;;AAEhC,OAAQC,YAAY,MAAO,mCAAmC,CAAC,CAAC;AAChE,OAAQC,eAAe,MAAM,sCAAsC,CAAC,CAAC;AACrE,OAAQC,WAAW,MAAM,sCAAsC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,CACnC;IAAEyB,IAAI,EAAE,MAAM;IAAEC,YAAY,EAAE,GAAG;IAAEC,GAAG,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IAAEC,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,GAAG;IAAEC,QAAQ,EAAE,QAAQ;IAACC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAC,KAAK,CAAC;EAAE,CAAC,EAC/H;IAACP,IAAI,EAAE,MAAM;IAAEC,YAAY,EAAE,GAAG;IAAEC,GAAG,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAC,KAAK,CAAC;EAAE,CAAC,EAChI;IAACP,IAAI,EAAE,MAAM;IAAEC,YAAY,EAAE,GAAG;IAAEC,GAAG,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,QAAQ,EAAE,QAAQ;IAACC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAC,KAAK,CAAC;EAAE,CAAC,EAC/H;IAACP,IAAI,EAAE,MAAM;IAAEC,YAAY,EAAE,GAAG;IAAEC,GAAG,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IAAEC,OAAO,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAC,KAAK,CAAC;EAAC,CAAC,EAC7H;IAACP,IAAI,EAAE,MAAM;IAAEC,YAAY,EAAE,GAAG;IAAEC,GAAG,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IAAEC,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,GAAG;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAC,KAAK,CAAC;EAAC,CAAC,CAE/H,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAG,IAAI1B,CAAC,CAAC2B,IAAI,CAAC;IAC3BC,OAAO,EAAE,sFAAsF;IAC/FC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;EAErB,CAAC,CAAC;EAEFvC,SAAS,CAAC,MAAM;IACd;IACA,MAAMwC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC;;MAEAf,SAAS,CAACgB,UAAU,IACxBA,UAAU,CAACC,GAAG,CAACC,KAAK,IAAI;QACtB;QACA,MAAMC,QAAQ,GAAGD,KAAK,CAACZ,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;QAC7C,MAAMc,UAAU,GAAIF,KAAK,CAACb,OAAO,GAAGgB,IAAI,CAACC,EAAE,GAAI,GAAG;QAClD,MAAMC,WAAW,GAAG,IAAI,CAAC,CAAC;QAC1B,MAAMC,QAAQ,GAAIL,QAAQ,GAAGE,IAAI,CAACI,GAAG,CAACL,UAAU,CAAC,GAAIG,WAAW;QAChE,MAAMG,QAAQ,GAAIP,QAAQ,GAAGE,IAAI,CAACM,GAAG,CAACP,UAAU,CAAC,IAAKG,WAAW,GAAGF,IAAI,CAACI,GAAG,CAACP,KAAK,CAACf,GAAG,GAAGkB,IAAI,CAACC,EAAE,GAAG,GAAG,CAAC,CAAC;QACxG,OAAO;UACL,GAAGJ,KAAK;UACRf,GAAG,EAAEe,KAAK,CAACf,GAAG,GAAIqB,QAAQ,GAAG,GAAG,GAAIH,IAAI,CAACC,EAAE;UAC3ClB,GAAG,EAAEc,KAAK,CAACd,GAAG,GAAIsB,QAAQ,GAAG,GAAG,GAAIL,IAAI,CAACC,EAAE;UAC3Cd,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAK,EAAE,CAACU,KAAK,CAACf,GAAG,EAAEe,KAAK,CAACd,GAAG,CAAC,CAAC,CAACwB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QAG9D,CAAC;MACH,CAAC,CACH,CAAC;IACG,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACf,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA;IAAK0C,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC9C7C,OAAA,CAACH,eAAe;MACdM,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBC,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA;IAAgB;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEFjD,OAAA,CAACX,YAAY;MAAC6D,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;MAACC,IAAI,EAAE,GAAI;MAACT,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAClF7C,OAAA,CAACV,SAAS;QACR8D,GAAG,EAAC,+DAA+D;QACnEC,WAAW,EAAC,mJAAmJ;QAC/JC,UAAU,EAAC,MAAM;QACjBC,OAAO,EAAE;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eAEFjD,OAAA,CAACJ,YAAY;QAAC4D,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEtD;MAAW;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDjD,OAAA,CAACJ,YAAY;QAAC4D,IAAI,EAAC,MAAM;QAACC,OAAO,EAAEpD;MAAS;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CjD,OAAA,CAACJ,YAAY;QAAC4D,IAAI,EAAC,UAAU;QAACC,OAAO,EAAElD;MAAa;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAItDtC,MAAM,CAACkB,GAAG,CAAEC,KAAK,IACxBA,KAAK,CAACX,QAAQ,KAAKV,gBAAgB,gBACjCT,OAAA,CAACN,QAAQ;QAEPgE,SAAS,EAAE5B,KAAK,CAACV,KAAM;QACvBuC,KAAK,EAAC,QAAQ;QACdC,MAAM,EAAE;MAAE,GAHL9B,KAAK,CAACX,QAAQ,GAAG,QAAQ;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI/B,CAAC,GACA,IACN,CAAC,EAIQtC,MAAM,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAE+B,GAAG,kBACrB7D,OAAA,CAACF,WAAW;QAEVgC,KAAK,EAAEA,KAAM;QACbT,SAAS,EAAEA,SAAU;QACrBZ,gBAAgB,EAAEA,gBAAiB;QACnCC,mBAAmB,EAAEA;MAAoB,GAJpCmD,GAAG;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAAC/C,EAAA,CAxGQD,GAAG;AAAA6D,EAAA,GAAH7D,GAAG;AA0GZ,eAAeA,GAAG;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}