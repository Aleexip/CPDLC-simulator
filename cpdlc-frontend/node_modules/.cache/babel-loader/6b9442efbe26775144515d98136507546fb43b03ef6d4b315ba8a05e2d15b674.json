{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\proiecte_programare\\\\CPDLC_simulator\\\\cpdlc-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\"; // Import React and necessary hooks for state management\n\nimport \"leaflet/dist/leaflet.css\"; // Import Leaflet CSS for proper map styling\n\nimport WeatherLayer from \"./components/Weather/WeatherLayer\"; // Import the WeatherLayer component for weather overlays\nimport WeatherControls from \"./components/Weather/WeatherControls\"; // Import the WeatherControls component for weather toggles\nimport PlaneMarker from \"./components/Aircraft/AircraftMarker\"; // Import the PlaneMarker component for individual plane markers\nimport MapContainer from \"./components/Map/MapContainer\"; // Import the MapContainer component for the main map\nimport AirspaceMap from \"./components/Map/MapContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for each weather overlay\n  const [showClouds, setShowClouds] = useState(false);\n  const [showWind, setShowWind] = useState(false);\n  const [showPressure, setShowPressure] = useState(false);\n  const [role, setRole] = useState(\"controller\"); // \"controller\" or \"pilot\"\n\n  const [selectedCallsign, setSelectedCallsign] = useState(null); // Currently selected aircraft callsign\n\n  // Sample plane data\n  const [planes, setPlanes] = useState([{\n    icao: \"LZIB\",\n    flight_level: 350,\n    lat: 44.57,\n    lng: 27.48,\n    heading: 90,\n    speed: 450,\n    callsign: \"BUL123\",\n    trail: [[44.57, 27.48]]\n  }, {\n    icao: \"A320\",\n    flight_level: 320,\n    lat: 44.87,\n    lng: 26.48,\n    heading: 270,\n    speed: 430,\n    callsign: \"BUL456\",\n    trail: [[44.87, 26.48]]\n  }, {\n    icao: \"B737\",\n    flight_level: 300,\n    lat: 44.57,\n    lng: 25.48,\n    heading: 180,\n    speed: 400,\n    callsign: \"BUL789\",\n    trail: [[44.57, 25.48]]\n  }, {\n    icao: \"C172\",\n    flight_level: 100,\n    lat: 45.57,\n    lng: 24.48,\n    heading: 0,\n    speed: 120,\n    callsign: \"BUL101\",\n    trail: [[45.57, 24.48]]\n  }, {\n    icao: \"E190\",\n    flight_level: 280,\n    lat: 45.57,\n    lng: 23.48,\n    heading: 45,\n    speed: 500,\n    callsign: \"BUL202\",\n    trail: [[45.57, 23.48]]\n  }]);\n  useEffect(() => {\n    // Simulate fetching plane data every 1 seconds\n    const interval = setInterval(() => {\n      // Here would fetch real data from an API\n\n      setPlanes(prevPlanes => prevPlanes.map(plane => {\n        // Calculate movement\n        const speedKms = plane.speed * 1.852 / 3600; // knots to km/s\n        const headingRad = plane.heading * Math.PI / 180;\n        const earthRadius = 6371; // km\n        const deltaLat = speedKms * Math.cos(headingRad) / earthRadius;\n        const deltaLon = speedKms * Math.sin(headingRad) / (earthRadius * Math.cos(plane.lat * Math.PI / 180));\n        return {\n          ...plane,\n          lat: plane.lat + deltaLat * 180 / Math.PI,\n          lng: plane.lng + deltaLon * 180 / Math.PI,\n          trail: [...plane.trail, [plane.lat, plane.lng]].slice(-350) // Keep last 350 positions\n        };\n      }));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(WeatherControls, {\n      showClouds: showClouds,\n      setShowClouds: setShowClouds,\n      showWind: showWind,\n      setShowWind: setShowWind,\n      showPressure: showPressure,\n      setShowPressure: setShowPressure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        top: 80,\n        left: 10,\n        zIndex: 1000\n      },\n      onClick: () => setRole(role === \"pilot\" ? \"controller\" : \"pilot\"),\n      children: [\"Switch to \", role === \"pilot\" ? \"Controller\" : \"Pilot\", \" View\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PilotATCPanel, {\n      plane: planes.find(p => p.callsign === selectedCallsign),\n      onAccept: callsign => console.log(\"Accepted\", callsign),\n      onDeny: callsign => console.log(\"Denied\", callsign)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AirspaceMap, {\n      planes: planes,\n      selectedCallsign: selectedCallsign,\n      setSelectedCallsign: setSelectedCallsign,\n      showClouds: showClouds,\n      showWind: showWind,\n      showPressure: showPressure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s+8w9yrh+aAXhPb3peHRlJgX8cI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WeatherLayer","WeatherControls","PlaneMarker","MapContainer","AirspaceMap","jsxDEV","_jsxDEV","App","_s","showClouds","setShowClouds","showWind","setShowWind","showPressure","setShowPressure","role","setRole","selectedCallsign","setSelectedCallsign","planes","setPlanes","icao","flight_level","lat","lng","heading","speed","callsign","trail","interval","setInterval","prevPlanes","map","plane","speedKms","headingRad","Math","PI","earthRadius","deltaLat","cos","deltaLon","sin","slice","clearInterval","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","zIndex","onClick","PilotATCPanel","find","p","onAccept","console","log","onDeny","_c","$RefreshReg$"],"sources":["D:/downloads/proiecte_programare/CPDLC_simulator/cpdlc-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"; // Import React and necessary hooks for state management\r\n\r\nimport \"leaflet/dist/leaflet.css\"; // Import Leaflet CSS for proper map styling\r\n\r\n\r\nimport  WeatherLayer  from \"./components/Weather/WeatherLayer\"; // Import the WeatherLayer component for weather overlays\r\nimport  WeatherControls from \"./components/Weather/WeatherControls\"; // Import the WeatherControls component for weather toggles\r\nimport  PlaneMarker from \"./components/Aircraft/AircraftMarker\"; // Import the PlaneMarker component for individual plane markers\r\nimport MapContainer  from \"./components/Map/MapContainer\"; // Import the MapContainer component for the main map\r\nimport AirspaceMap from \"./components/Map/MapContainer\";\r\n\r\nfunction App() {\r\n\r\n  // State for each weather overlay\r\n  const [showClouds, setShowClouds] = useState(false);\r\n  const [showWind, setShowWind] = useState(false);\r\n  const [showPressure, setShowPressure] = useState(false);\r\n \r\n\r\nconst [role, setRole] = useState(\"controller\"); // \"controller\" or \"pilot\"\r\n\r\nconst [selectedCallsign, setSelectedCallsign] = useState(null); // Currently selected aircraft callsign\r\n\r\n  // Sample plane data\r\n  const [planes, setPlanes] = useState([\r\n    { icao: \"LZIB\", flight_level: 350, lat: 44.57, lng: 27.48, heading: 90, speed: 450, callsign: \"BUL123\",trail: [[44.57,27.48]] },\r\n    {icao: \"A320\", flight_level: 320, lat: 44.87, lng: 26.48, heading: 270, speed: 430, callsign: \"BUL456\", trail: [[44.87,26.48]] },\r\n    {icao: \"B737\", flight_level: 300, lat: 44.57, lng: 25.48, heading: 180, speed: 400, callsign: \"BUL789\",trail: [[44.57,25.48]] },\r\n    {icao: \"C172\", flight_level: 100, lat: 45.57, lng: 24.48, heading: 0, speed: 120, callsign: \"BUL101\", trail: [[45.57,24.48]]},\r\n    {icao: \"E190\", flight_level: 280, lat: 45.57, lng: 23.48, heading: 45, speed: 500, callsign: \"BUL202\", trail: [[45.57,23.48]]},\r\n\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching plane data every 1 seconds\r\n    const interval = setInterval(() => {\r\n      // Here would fetch real data from an API\r\n\r\n      setPlanes(prevPlanes =>\r\n  prevPlanes.map(plane => {\r\n    // Calculate movement\r\n    const speedKms = plane.speed * 1.852 / 3600; // knots to km/s\r\n    const headingRad = (plane.heading * Math.PI) / 180;\r\n    const earthRadius = 6371; // km\r\n    const deltaLat = (speedKms * Math.cos(headingRad)) / earthRadius;\r\n    const deltaLon = (speedKms * Math.sin(headingRad)) / (earthRadius * Math.cos(plane.lat * Math.PI / 180));\r\n    return {\r\n      ...plane,\r\n      lat: plane.lat + (deltaLat * 180) / Math.PI,\r\n      lng: plane.lng + (deltaLon * 180) / Math.PI,\r\n      trail: [...plane.trail, [plane.lat, plane.lng]].slice(-350) // Keep last 350 positions\r\n\r\n     \r\n    };\r\n  })\r\n);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\r\n      <WeatherControls\r\n        showClouds={showClouds} setShowClouds={setShowClouds}\r\n        showWind={showWind} setShowWind={setShowWind}\r\n        showPressure={showPressure} setShowPressure={setShowPressure}\r\n      />\r\n     \r\n      {/*Role toggle*/}\r\n      <button \r\n       style={{ position: \"absolute\", top: 80, left: 10, zIndex: 1000 }}\r\n        onClick={() => setRole(role === \"pilot\" ? \"controller\" : \"pilot\")}\r\n      >\r\n        Switch to {role === \"pilot\" ? \"Controller\" : \"Pilot\"} View\r\n      </button>\r\n\r\n      {/* Pilot ATC Panel - visible only in pilot mode */}\r\n      <PilotATCPanel\r\n  plane={planes.find(p => p.callsign === selectedCallsign)}\r\n  onAccept={(callsign) => console.log(\"Accepted\", callsign)}\r\n  onDeny={(callsign) => console.log(\"Denied\", callsign)}\r\n/>\r\n\r\n      {/* Main Map */}\r\n      <AirspaceMap\r\n        planes={planes}\r\n        selectedCallsign={selectedCallsign}\r\n        setSelectedCallsign={setSelectedCallsign}\r\n        showClouds={showClouds}\r\n        showWind={showWind}\r\n        showPressure={showPressure}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}