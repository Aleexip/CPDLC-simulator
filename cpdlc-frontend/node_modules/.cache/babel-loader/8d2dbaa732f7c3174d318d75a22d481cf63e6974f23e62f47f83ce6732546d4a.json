{"ast":null,"code":"var _jsxFileName = \"C:\\\\proiecte_pro\\\\CPDLC-simulator\\\\cpdlc-frontend\\\\src\\\\components\\\\Map\\\\MapContainer.js\";\nimport React from \"react\"; // Import React for component creation\n\nimport { MapContainer, TileLayer } from \"react-leaflet\"; // Import MapContainer and TileLayer for map rendering\nimport L from \"leaflet\"; // Import Leaflet for map functionalities\nimport \"leaflet-rotatedmarker\"; // Import rotated marker plugin for heading support\n\nimport WeatherLayer from \"../Weather/WeatherLayer\"; // Import the WeatherLayer component for weather overlays\nimport PlaneMarker from \"../Aircraft/AircraftMarker\"; // Import the PlaneMarker component for individual plane markers\n\n// fix for leaflet icon issues in some build environments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (typeof window !== \"undefined\") {\n  window.L = L;\n}\nfunction AirspaceMap({\n  planes,\n  role,\n  selectedCallsign,\n  setSelectedCallsign,\n  showClouds,\n  showWind,\n  showPressure\n}) {\n  // Define a custom icon for the planes\n  const planeIcon = new L.Icon({\n    iconUrl: \"https://icones.pro/wp-content/uploads/2021/08/symbole-d-avion-et-de-voyage-jaune.png\",\n    iconSize: [32, 32],\n    iconAnchor: [16, 16]\n  });\n\n  //Filter planes based on role (plot sees only own planes)\n  const visibilePlanes = role === \"pilot\" ? planes.filter(p => p.callsign.startsWith(\"BUL123\")) : planes;\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [46, 25],\n    zoom: 7.5,\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    \"background-color\": \"#000\",\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors \\xA9 <a href=\\\"https://carto.com/attributions\\\">CARTO</a>\",\n      subdomains: \"abcd\",\n      maxZoom: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherLayer, {\n      type: \"clouds\",\n      visible: showClouds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherLayer, {\n      type: \"wind\",\n      visible: showWind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherLayer, {\n      type: \"pressure\",\n      visible: showPressure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), planes.map(plane => /*#__PURE__*/_jsxDEV(PlaneMarker, {\n      plane: plane,\n      planeIcon: planeIcon,\n      selectedCallsign: selectedCallsign,\n      setSelectedCallsign: setSelectedCallsign\n    }, plane.callsign, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = AirspaceMap;\nexport default AirspaceMap;\nvar _c;\n$RefreshReg$(_c, \"AirspaceMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","L","WeatherLayer","PlaneMarker","jsxDEV","_jsxDEV","window","AirspaceMap","planes","role","selectedCallsign","setSelectedCallsign","showClouds","showWind","showPressure","planeIcon","Icon","iconUrl","iconSize","iconAnchor","visibilePlanes","filter","p","callsign","startsWith","center","zoom","style","height","width","children","url","attribution","subdomains","maxZoom","fileName","_jsxFileName","lineNumber","columnNumber","type","visible","map","plane","_c","$RefreshReg$"],"sources":["C:/proiecte_pro/CPDLC-simulator/cpdlc-frontend/src/components/Map/MapContainer.js"],"sourcesContent":["import React from \"react\"; // Import React for component creation\r\n\r\nimport { MapContainer, TileLayer } from \"react-leaflet\"; // Import MapContainer and TileLayer for map rendering\r\nimport L from \"leaflet\"; // Import Leaflet for map functionalities\r\nimport \"leaflet-rotatedmarker\"; // Import rotated marker plugin for heading support\r\n\r\nimport WeatherLayer from \"../Weather/WeatherLayer\"; // Import the WeatherLayer component for weather overlays\r\nimport PlaneMarker from \"../Aircraft/AircraftMarker\"; // Import the PlaneMarker component for individual plane markers\r\n\r\n// fix for leaflet icon issues in some build environments\r\nif (typeof window !== \"undefined\") {\r\n  window.L = L;\r\n}\r\n\r\nfunction AirspaceMap({\r\n  planes,\r\n  role,\r\n  selectedCallsign,\r\n  setSelectedCallsign,\r\n  showClouds,\r\n  showWind,\r\n  showPressure,\r\n}) {\r\n  // Define a custom icon for the planes\r\n  const planeIcon = new L.Icon({\r\n    iconUrl:\r\n      \"https://icones.pro/wp-content/uploads/2021/08/symbole-d-avion-et-de-voyage-jaune.png\",\r\n    iconSize: [32, 32],\r\n    iconAnchor: [16, 16],\r\n  });\r\n\r\n  //Filter planes based on role (plot sees only own planes)\r\n  const visibilePlanes =\r\n    role === \"pilot\"\r\n      ? planes.filter((p) => p.callsign.startsWith(\"BUL123\"))\r\n      : planes;\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[46, 25]}\r\n      zoom={7.5}\r\n      style={{ height: \"100%\", width: \"100%\" }}\r\n      background-color=\"#000\"\r\n    >\r\n      {/* Basemap */}\r\n      <TileLayer\r\n        url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\r\n        subdomains=\"abcd\"\r\n        maxZoom={20}\r\n      />\r\n\r\n      {/* Weather overlays */}\r\n      <WeatherLayer type=\"clouds\" visible={showClouds} />\r\n      <WeatherLayer type=\"wind\" visible={showWind} />\r\n      <WeatherLayer type=\"pressure\" visible={showPressure} />\r\n\r\n      {/* Plane markers + trails */}\r\n      {planes.map((plane) => (\r\n        <PlaneMarker\r\n          key={plane.callsign}\r\n          plane={plane}\r\n          planeIcon={planeIcon}\r\n          selectedCallsign={selectedCallsign}\r\n          setSelectedCallsign={setSelectedCallsign}\r\n        />\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default AirspaceMap;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe,CAAC,CAAC;AACzD,OAAOC,CAAC,MAAM,SAAS,CAAC,CAAC;AACzB,OAAO,uBAAuB,CAAC,CAAC;;AAEhC,OAAOC,YAAY,MAAM,yBAAyB,CAAC,CAAC;AACpD,OAAOC,WAAW,MAAM,4BAA4B,CAAC,CAAC;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EACjCA,MAAM,CAACL,CAAC,GAAGA,CAAC;AACd;AAEA,SAASM,WAAWA,CAAC;EACnBC,MAAM;EACNC,IAAI;EACJC,gBAAgB;EAChBC,mBAAmB;EACnBC,UAAU;EACVC,QAAQ;EACRC;AACF,CAAC,EAAE;EACD;EACA,MAAMC,SAAS,GAAG,IAAId,CAAC,CAACe,IAAI,CAAC;IAC3BC,OAAO,EACL,sFAAsF;IACxFC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;EACrB,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAClBX,IAAI,KAAK,OAAO,GACZD,MAAM,CAACa,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAACC,UAAU,CAAC,QAAQ,CAAC,CAAC,GACrDhB,MAAM;EAEZ,oBACEH,OAAA,CAACN,YAAY;IACX0B,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;IACjBC,IAAI,EAAE,GAAI;IACVC,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IACzC,oBAAiB,MAAM;IAAAC,QAAA,gBAGvBzB,OAAA,CAACL,SAAS;MACR+B,GAAG,EAAC,+DAA+D;MACnEC,WAAW,EAAC,mJAAmJ;MAC/JC,UAAU,EAAC,MAAM;MACjBC,OAAO,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eAGFjC,OAAA,CAACH,YAAY;MAACqC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAE5B;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDjC,OAAA,CAACH,YAAY;MAACqC,IAAI,EAAC,MAAM;MAACC,OAAO,EAAE3B;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CjC,OAAA,CAACH,YAAY;MAACqC,IAAI,EAAC,UAAU;MAACC,OAAO,EAAE1B;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGtD9B,MAAM,CAACiC,GAAG,CAAEC,KAAK,iBAChBrC,OAAA,CAACF,WAAW;MAEVuC,KAAK,EAAEA,KAAM;MACb3B,SAAS,EAAEA,SAAU;MACrBL,gBAAgB,EAAEA,gBAAiB;MACnCC,mBAAmB,EAAEA;IAAoB,GAJpC+B,KAAK,CAACnB,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKpB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB;AAACK,EAAA,GAvDQpC,WAAW;AAyDpB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}